{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import axios from 'axios';\nimport './css/styles.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport Notiflix from 'notiflix';\n\nconst elements = {\n  searchForm: document.querySelector('.search-form'),\n  gallery: document.querySelector('.gallery'),\n  loadMoreBtn: document.querySelector('.load-more'),\n};\n\nlet currentPage = 1;\nelements.loadMoreBtn.style.display = 'none';\n\n// Notiflix.Notify.init({ position: 'right-bottom' });\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionData: 'alt',\n  captionPosition: 'bottom',\n  captionDelay: 250,\n});\n\nelements.searchForm.addEventListener('submit', handlerFormSubmit);\nelements.loadMoreBtn.addEventListener('click', loadMoreImages);\n\nasync function loadMoreImages() {\n  try {\n    const searchQuery = elements.searchForm.elements.searchQuery.value;\n    const data = await serviceImage(searchQuery, currentPage);\n\n    if (data.hits.length === 0) {\n      Notiflix.Notify.warning(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n      return;\n    }\n\n    elements.gallery.insertAdjacentHTML('beforeend', createMarkup(data.hits));\n\n    if (currentPage * 40 >= data.totalHits) {\n      elements.loadMoreBtn.style.display = 'none';\n      Notiflix.Notify.info(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n    } else {\n      elements.loadMoreBtn.style.display = 'block';\n      lightbox.refresh();\n    }\n\n    currentPage += 1;\n  } catch (error) {\n    console.error('Error loading more images:', error);\n    Notiflix.Notify.failure('Error fetching more images. Please try again.');\n  }\n}\n\nasync function handlerFormSubmit(evt) {\n  evt.preventDefault();\n  const searchQuery = evt.currentTarget.elements.searchQuery.value;\n\n  try {\n    const data = await serviceImage(searchQuery);\n    currentPage = 1;\n    elements.gallery.innerHTML = '';\n    elements.gallery.insertAdjacentHTML('afterbegin', createMarkup(data.hits));\n    elements.loadMoreBtn.style.display = 'block';\n    lightbox.refresh();\n    await loadMoreImages();\n  } catch (error) {\n    console.error('Error fetching images:', error);\n    Notiflix.Notify.failure('Error fetching images. Please try again.');\n  }\n}\n\nasync function serviceImage(q, page = 1) {\n  const BASE_URL = 'https://pixabay.com/api/';\n  const API_KEY = '35840272-25b71e9b06347bf3cb03a4874';\n\n  try {\n    const response = await axios.get(BASE_URL, {\n      params: {\n        key: API_KEY,\n        q,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n        page,\n        per_page: 40,\n      },\n    });\n\n    if (response.data.hits.length === 0) {\n      Notiflix.Notify.warning('Sorry, no images found. Please try again.');\n      return { hits: [], totalHits: 0 };\n    }\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message || 'Error fetching images');\n  }\n}\n\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => `\n    <div class=\"photo-card\"><a class=\"img-link\" href=\"${largeImageURL}\">\n    <img class=\"photo-card-img\"src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" /></a>\n    <div class=\"info\">\n        <p class=\"info-item\">\n            <b>Likes ${likes}</b>\n        </p>\n            <p class=\"info-item\">\n        <b>Views ${views}</b>\n        </p>\n        <p class=\"info-item\">\n            <b>Comments ${comments}</b>\n        </p>\n        <p class=\"info-item\">\n            <b>Downloads ${downloads}</b>\n        </p>\n    </div>\n</div>\n    `\n    )\n    .join('');\n}\n"],"names":["elements","currentPage","lightbox","SimpleLightbox","handlerFormSubmit","loadMoreImages","searchQuery","data","serviceImage","Notiflix","createMarkup","error","evt","q","page","BASE_URL","API_KEY","response","axios","arr","webformatURL","largeImageURL","tags","likes","views","comments","downloads"],"mappings":"owBAMA,MAAMA,EAAW,CACf,WAAY,SAAS,cAAc,cAAc,EACjD,QAAS,SAAS,cAAc,UAAU,EAC1C,YAAa,SAAS,cAAc,YAAY,CAClD,EAEA,IAAIC,EAAc,EAClBD,EAAS,YAAY,MAAM,QAAU,OAIrC,MAAME,EAAW,IAAIC,EAAe,aAAc,CAChD,YAAa,MACb,gBAAiB,SACjB,aAAc,GAChB,CAAC,EAEDH,EAAS,WAAW,iBAAiB,SAAUI,CAAiB,EAChEJ,EAAS,YAAY,iBAAiB,QAASK,CAAc,EAE7D,eAAeA,GAAiB,CAC9B,GAAI,CACF,MAAMC,EAAcN,EAAS,WAAW,SAAS,YAAY,MACvDO,EAAO,MAAMC,EAAaF,EAAaL,CAAW,EAExD,GAAIM,EAAK,KAAK,SAAW,EAAG,CAC1BE,EAAS,OAAO,QACd,0EACR,EACM,MACD,CAEDT,EAAS,QAAQ,mBAAmB,YAAaU,EAAaH,EAAK,IAAI,CAAC,EAEpEN,EAAc,IAAMM,EAAK,WAC3BP,EAAS,YAAY,MAAM,QAAU,OACrCS,EAAS,OAAO,KACd,4DACR,IAEMT,EAAS,YAAY,MAAM,QAAU,QACrCE,EAAS,QAAO,GAGlBD,GAAe,CAChB,OAAQU,EAAP,CACA,QAAQ,MAAM,6BAA8BA,CAAK,EACjDF,EAAS,OAAO,QAAQ,+CAA+C,CACxE,CACH,CAEA,eAAeL,EAAkBQ,EAAK,CACpCA,EAAI,eAAc,EAClB,MAAMN,EAAcM,EAAI,cAAc,SAAS,YAAY,MAE3D,GAAI,CACF,MAAML,EAAO,MAAMC,EAAaF,CAAW,EAC3CL,EAAc,EACdD,EAAS,QAAQ,UAAY,GAC7BA,EAAS,QAAQ,mBAAmB,aAAcU,EAAaH,EAAK,IAAI,CAAC,EACzEP,EAAS,YAAY,MAAM,QAAU,QACrCE,EAAS,QAAO,EAChB,MAAMG,EAAc,CACrB,OAAQM,EAAP,CACA,QAAQ,MAAM,yBAA0BA,CAAK,EAC7CF,EAAS,OAAO,QAAQ,0CAA0C,CACnE,CACH,CAEA,eAAeD,EAAaK,EAAGC,EAAO,EAAG,CACvC,MAAMC,EAAW,2BACXC,EAAU,qCAEhB,GAAI,CACF,MAAMC,EAAW,MAAMC,EAAM,IAAIH,EAAU,CACzC,OAAQ,CACN,IAAKC,EACL,EAAAH,EACA,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,KAAAC,EACA,SAAU,EACX,CACP,CAAK,EAED,OAAIG,EAAS,KAAK,KAAK,SAAW,GAChCR,EAAS,OAAO,QAAQ,2CAA2C,EAC5D,CAAE,KAAM,CAAA,EAAI,UAAW,CAAC,GAE1BQ,EAAS,IACjB,OAAQN,EAAP,CACA,MAAM,IAAI,MAAMA,EAAM,SAAW,uBAAuB,CACzD,CACH,CAEA,SAASD,EAAaS,EAAK,CACzB,OAAOA,EACJ,IACC,CAAC,CACC,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IAAY;AAAA,wDAC4CL;AAAA,sCAClBD,WAAsBE;AAAA;AAAA;AAAA,uBAGrCC;AAAA;AAAA;AAAA,mBAGJC;AAAA;AAAA;AAAA,0BAGOC;AAAA;AAAA;AAAA,2BAGCC;AAAA;AAAA;AAAA;AAAA,KAKtB,EACA,KAAK,EAAE,CACZ"}